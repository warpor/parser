name: Code Quality Checks

on: [ push, pull_request ]

jobs:
  code-check:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy

      - name: Run flake8
        run: |
          flake8 

      - name: Run mypy
        run: |
          mypy  


      - name: Create .env file
        run: |
          echo "DB=${{ vars.DB }}" >> .env_tests
          echo "DB_NAME=${{ vars.DB_NAME }}" >> .env_tests
          echo "DB_COLLECTION=${{ vars.DB_COLLECTION }}" >> .env_tests
          echo "DB_HOST=${{ vars.DB_HOST }}" >> .env_tests
          echo "DB_PORT=${{ vars.DB_PORT }}" >> .env_tests
          echo "BROKER_PROTOCOL=${{ vars.BROKER_PROTOCOL }}" >> .env_tests
          echo "BROKER_HOST=${{ vars.BROKER_HOST }}" >> .env_tests
          echo "BROKER_PORT=${{ vars.BROKER_PORT }}" >> .env_tests
          echo "BROKER_START_URLS_QUEUE=${{ vars.BROKER_START_URLS_QUEUE }}" >> .env_tests
          echo "BROKER_DEFAULT_USER=${{ vars.BROKER_DEFAULT_USER }}" >> .env_tests
          echo "BROKER_DEFAULT_PASS=${{ vars.BROKER_DEFAULT_PASS }}" >> .env_tests
          echo "TESTS_MODE=${{ vars.TESTS_MODE }}" >> .env_tests
          
      - name: Run tests for parser
        run: docker compose -f docker-compose.test.yml up web_parser_tests --abort-on-container-exit
        continue-on-error: false
        
      - name: Run tests for urls_service
        run: docker compose -f docker-compose.test.yml up urls_service_tests --abort-on-container-exit
        continue-on-error: false


      - name: Stop all containers
        run: docker compose -f docker-compose.test.yml --profile tests down  
